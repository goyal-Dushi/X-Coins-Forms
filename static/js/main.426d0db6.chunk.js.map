{"version":3,"sources":["components/Warning.jsx","images/icons/clock-icon.svg","components/Label.jsx","components/SubmitBtn.jsx","pages/Form-1.jsx","pages/Form-1-UPD.jsx","pages/Form-2.jsx","components/BlueBtn.jsx","pages/UpdatePhone.jsx","pages/Form-3.jsx","images/icons/attention-icon.svg","pages/Form-5.jsx","components/FormHeading.jsx","components/NavCircle.jsx","App.js","index.js"],"names":["Warning","props","style","height","className","src","imgSrc","alt","content","Label","htmlFor","labelFor","title","SubmitBtn","type","typeFor","name","Form1","history","useHistory","useState","firstNameClass","setfirstNameClass","lastNameClass","setlastNameClass","emailClass","setemailClass","passwordClass","setpasswordClass","initialValues","firstName","lastName","email","password","terms","validationSchema","Yup","max","required","min","matches","oneOf","onSubmit","values","console","log","push","formik","ClockIcon","altImg","handleSubmit","autoComplete","placeholder","errors","touched","display","component","href","sitekey","process","marginTop","validate","pincode1","pincode2","pincode3","pincode4","Form1_UPD","useFormik","ClockImg","action","id","pattern","onChange","handleChange","onBlur","handleBlur","value","Form2","countryNameclass","setCountNameClass","firstAddclass","setfirstAddClass","secondAddclass","setSecondAddClass","stateNameclass","setStateNameClass","cityNameclass","setCityNameClass","zipcodeclass","setzipcodeClass","countryCodeclass","setCountCodeClass","phonoeclass","setPhoneClass","countryName","firstAddress","lastAddress","stateName","cityName","zipcode","countryCode","phoneNo","positive","meta","Select","defaultValue","MenuItem","IN","US","error","maxWidth","width","as","BlueBtn","btnWidth","UpdatePhone","countryCodeClass","setCountryCodeClass","phoneClass","phoneNum","marginLeft","onClick","function","Form3","changeNumber","setChange","smsClass","setsmsClass","smsNumber","plaholder","Form5","dobClass","setDobClass","methodClass","setmethodClass","frontPhotoClass","setfrontClass","backPhotoClass","setBackClass","selfieClass","setselfieClass","dlNumClass","setDLnumClass","AttentionIcon","dob","method","frontPhoto","backPhoto","selfiePhoto","DLnumber","Date","typeError","accept","FromHeading","NavCircle","labelHead","fontWeight","App","basename","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.426d0db6.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./warning.scss\";\n\nfunction Warning(props)\n{\n    return (\n        <div style={{height:props.height}} className=\"warning-rect\">\n            <img className=\"warning-icon\" src={props.imgSrc} alt={props.imgSrc} />\n            {props.content}\n        </div>\n    );\n}\n\nexport default Warning;","export default __webpack_public_path__ + \"static/media/clock-icon.e0d15e0f.svg\";","import React from 'react';\nimport \"./label.scss\";\n\nfunction Label(props)\n{\n    return(\n        <label htmlFor={props.labelFor}>{props.title}</label>\n    )\n}\n\nexport default Label;","import React from 'react';\nimport \"./submitBtn.scss\";\n\nfunction SubmitBtn(props)\n{\n    return(\n        <button className=\"green-btn\" type={props.typeFor}>\n            {props.name}\n        </button>\n    );\n}\n\nexport default SubmitBtn;","import { ErrorMessage, Field, Formik} from \"formik\";\nimport React, { useState } from \"react\";\nimport Warning from \"../components/Warning\";\nimport ClockIcon from \"../images/icons/clock-icon.svg\";\nimport Label from \"../components/Label\";\nimport SubmitButton from \"../components/SubmitBtn\";\nimport \"../sass/forms.scss\";\nimport ReCaptchaV2 from \"react-google-recaptcha\";\nimport { useHistory } from \"react-router\";\nimport * as Yup from \"yup\";\n\nfunction Form1()\n{\n    const history = useHistory();\n    const [firstNameClass, setfirstNameClass] = useState('correct-input');\n    const [lastNameClass, setlastNameClass] = useState('correct-input');\n    const [emailClass, setemailClass] = useState('correct-input');\n    const [passwordClass, setpasswordClass] = useState('correct-input');\n    return(     \n        <Formik\n        initialValues = {{\n            firstName : '',\n            lastName : '',\n            email : '',\n            password : '',\n            terms : false\n        }}\n        validationSchema = { Yup.object({\n            firstName: Yup.string()\n            .max(12, \"Must be 12 characters or less\")\n            .required(\"Required Field\"),\n            lastName : Yup.string()\n            .max(12, \"Must be 12 characters or less\")\n            .required(\"Required Field\"),\n            email : Yup.string()\n            .email(\"Invalid email ID provided\")\n            .required(\"Required Field\"),\n            password : Yup.string()\n            .max(15, \"Must be of max 15 characters\")\n            .min(4, \"Cannot be less than 4 characters\")\n            .required(\"Required Field\")\n            .matches(\"(?=.*[A-Z])\", \"Must contain atlease one UPPERCASE char\")\n            .matches(\"(?=.*[a-z])\",\"Must contain atleast one lowercase char\")\n            .matches(\"(?=.*[-+_!@#$%^&*., ?])\", \"Must contain atleast one special character\"),\n            terms: Yup.boolean()\n            .oneOf([true], \"Must accept the terms and conditions first\")\n        }) }\n        onSubmit = {(values) => {\n            console.log(\n                \"Form is successfully submitted :\"+\n                values.firstName+\" \"+\n                values.lastName\n            );  \n            history.push(\"/upd\");\n        }\n    }\n    >\n\n         {formik => (\n         <>\n         <Warning imgSrc={ClockIcon} altImg=\"Clock-Icon\"\n                    height={72} \n                    content=\"Once submitted,your profile cannot be changed. \n                    Please ensure that your information is correct.\" \n        />\n\n        <form onSubmit={formik.handleSubmit}>\n\n            <div className=\"input-container\" >\n            <Label title=\"First name*\" labelFor=\"firstName\" />\n            <Field autoComplete=\"off\" name=\"firstName\" type=\"text\" placeholder=\"Enter First Name\" className={firstNameClass} />\n            {formik.errors.firstName && formik.touched.firstName ? setfirstNameClass('error-input') : setfirstNameClass('correct-input')}\n            <ErrorMessage style={{display:\"block\"}} name=\"firstName\" className=\"error-msg\" component=\"div\" />\n            </div>\n            \n            <div className=\"input-container\">\n            <Label labelFor=\"#lastName\" title=\"Last name*\" />\n            <Field autoComplete=\"off\" name=\"lastName\" type=\"text\" placeholder=\"Enter Last Name\" className={lastNameClass} />\n            {formik.errors.lastName && formik.touched.lastName ? setlastNameClass('error-input') : setlastNameClass('correct-input')}\n            <ErrorMessage name=\"lastName\" className=\"error-msg\" component=\"div\" />\n            </div>\n\n            <div className=\"input-container\">\n            <Label title=\"Email address*\" labelFor=\"#email\" />\n            <Field autoComplete=\"off\" type=\"text\" name=\"email\" placeholder=\"Enter Email ID\" className={emailClass} />\n            {formik.errors.email && formik.touched.email ? setemailClass('error-input') : setemailClass('correct-input')}\n            <ErrorMessage name=\"email\" component=\"div\" className=\"error-msg\" />\n            </div>\n\n            <div className=\"input-container\">\n            <Label labelFor=\"password\" title=\"Create Password\" />\n            <Field name=\"password\" placeholder=\"Enter Password\" type=\"password\" className={passwordClass} />\n            {formik.errors.password && formik.touched.password ? setpasswordClass('error-input') : setpasswordClass('correct-input')}\n            <ErrorMessage name=\"password\" component=\"div\" className=\"error-msg\" />\n            </div>\n\n            <div className=\"conditional-container\" style={{height:130}}>\n            <div className=\"conditional-box\" >\n                <Field type=\"checkbox\" name=\"terms\" />\n                <p>\n                    By clicking «Continue» you agree to our <a href=\"www.google.com\" className=\"links\">Terms</a> ,<a href=\"www.google.com\" className=\"links\"> Cookies Policy </a> and \n                    <a href=\"www.google.com\" className=\"links\"> Privacy Policy </a>. You may receive email and SMS notifications from \n                    us and can opt out at any time.\n                </p>\n            </div>\n            <ErrorMessage name=\"terms\" component=\"div\" className=\"error-msg\" />\n            </div>\n\n            <ReCaptchaV2 sitekey={process.env.REACT_APP_SITE_KEY} />\n            <div style={{marginTop:40}}>\n            <SubmitButton name=\"CONTINUE\"  typeFor=\"submit\" />\n            </div>\n        </form>\n        </>\n     )}\n     </Formik>  \n    );\n}\n\nexport default Form1;","import React from \"react\";\nimport Warning from \"../components/Warning\";\nimport ClockImg from \"../images/icons/clock-icon.svg\";\nimport Label from \"../components/Label\";\nimport \"./formUPD.scss\";\nimport SubmitBtn from \"../components/SubmitBtn\";\nimport { useFormik } from \"formik\";\nimport { useHistory } from \"react-router\";\n\nconst validate = (values) => {\n    const errors = {};\n    \n    if(!values.pincode1){\n        errors.pincode1 = \"Required field 1\";\n    }\n    else if(values.pincode1 > 9 || values.pincode1 < 0){\n        errors.pincode1 = \"Field 1: only single digit poitive value accepted\"\n    }\n    if(!values.pincode2){\n        errors.pincode2 = \"Required field 2\";\n    }\n    else if(values.pincode2 > 9 || values.pincode2 < 0){\n        errors.pincode2 = \"Field 2: only single digit positive value accepted\"\n    }\n    if(!values.pincode3){\n        errors.pincode3 = \"Required field 3\";\n    }\n    else if(values.pincode3 > 9 || values.pincode3 < 0){\n        errors.pincode3 = \"Field 3: only single digit positive value accepted\"\n    }\n    if(!values.pincode4){\n        errors.pincode4 = \"Required field 4\";\n    }\n    else if(values.pincode4 > 9 || values.pincode4 < 0){\n        errors.pincode4 = \"Field 4: only single digit positive value accepted\"\n    }\n\n    return errors;\n}\n\nfunction Form1_UPD()\n{\n    const history = useHistory();\n\n    const formik = useFormik({\n        initialValues : {\n            pincode1: null,\n            pincode2: null,\n            pincode3 : null,\n            pincode4: null\n        },\n        validate,\n        onSubmit : (values) => {\n            console.log(\"Pincode : \"+values.pincode1+values.pincode2+values.pincode3+values.pincode4);\n            history.push(\"/personalDetails\");\n        }\n    });\n\n    return(\n        <>\n            <Warning\n            height={72} \n            imgSrc={ClockImg}\n            content=\"We've sent your email address a code. Please\n                    input the 4 digit code here to verify your email\n                    address\" \n            />\n            \n            <form className=\"form-UPD\" action=\"#\" onSubmit={formik.handleSubmit} >\n\n            <div className=\"label-container\">\n            <Label labelFor=\"pin-container\" title=\"4 digit code\" />\n            </div>\n\n            <div className=\"pin-container\">\n                <input \n                type=\"number\" \n                name=\"pincode1\" \n                id=\"pincode1\"\n                min={0}\n                pattern=\"/[^0-9]|^0+(?!$)/g\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.pincode1}\n                />\n\n                <input \n                type=\"number\" \n                name=\"pincode2\" \n                id=\"pincode2\"\n                min={0}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.pincode2}\n                />\n\n                <input \n                type=\"number\" \n                name=\"pincode3\" \n                id=\"pincode3\"\n                min={0} \n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.pincode3}\n                />\n\n                <input \n                type=\"number\" \n                name=\"pincode4\" \n                id=\"pincode4\"\n                min={0} \n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={formik.values.pincode4}\n                />\n                \n            </div>\n            {formik.touched.pincode1 && formik.errors.pincode1 ? (\n                    <div className=\"error-msg\"> {formik.errors.pincode1} </div>\n            ): null}\n            {formik.touched.pincode2 && formik.errors.pincode2 ? (\n                    <div className=\"error-msg\"> {formik.errors.pincode2} </div>\n                ): null}\n            {formik.touched.pincode3 && formik.errors.pincode3 ? (\n                    <div className=\"error-msg\"> {formik.errors.pincode3} </div>\n            ): null}\n            {formik.touched.pincode4 && formik.errors.pincode4 ? (\n                    <div className=\"error-msg\"> {formik.errors.pincode4} </div>\n            ): null}\n\n\n            <div className=\"form1UPD-submit-btn\">\n            <SubmitBtn typeFor=\"submit\" name=\"RESEND CODE\" />\n            </div>\n            </form>\n        </>\n    );\n}\n\nexport default Form1_UPD;","import React, { useState } from \"react\";\nimport \"../sass/forms.scss\";\nimport \"./form2.scss\";\nimport Label from \"../components/Label\";\nimport SubmitBtn from \"../components/SubmitBtn\";\nimport { useHistory } from \"react-router\";\nimport { ErrorMessage, Field, Formik} from \"formik\";\nimport * as Yup from \"yup\"\nimport Flags from \"country-flag-icons/react/3x2\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\n\nfunction Form2()\n{\n\n    const history = useHistory();\n    const [countryNameclass, setCountNameClass] = useState('correct-input');\n    const [firstAddclass, setfirstAddClass] = useState('correct-input');\n    const [secondAddclass, setSecondAddClass] = useState('correct-input');\n    const [stateNameclass, setStateNameClass] = useState('correct-input');\n    const [cityNameclass, setCityNameClass] = useState('correct-input');\n    const [zipcodeclass, setzipcodeClass] = useState('correct-input');\n    const [countryCodeclass, setCountCodeClass] = useState('correct-input');\n    const [phonoeclass, setPhoneClass] = useState('correct-input');\n    \n    return(\n\n        <Formik \n        initialValues = {{\n            countryName : '',\n            firstAddress : '',\n            lastAddress : '',\n            stateName : '',\n            cityName : '',\n            zipcode : '',\n            countryCode : '',\n            phoneNo : ''\n        }}\n        validationSchema = {Yup.object({\n            countryName : Yup.string()\n            .required(\"Required Country Name\"),\n            firstAddress : Yup.string()\n            .required(\"Required First Address Field\"),\n            lastAddress : Yup.string()\n            .required(\"Required Second Address Field\"),\n            stateName : Yup.string()\n            .required(\"Required State Name\"),\n            cityName : Yup.string()\n            .required(\"Required City name\"),\n            zipcode : Yup.number()\n            .max(999999, \"Max lenght cannot exceed 6 digits\")\n            .required(\"Required zipcode\"),\n            countryCode : Yup.string()\n            .required(\"Required Country code\"),\n            phoneNo : Yup.number()\n            .required(\"Required Phone number\")\n            .positive(\"Negative Number\")\n            .max(9999999999,\"Invalid Number\")\n            .min(1000000000, \"Invalid Number\")\n\n        })}\n        onSubmit = {(values) => {\n            console.log(\n                \"Country Name : \"+values.countryName+\n                \" Country Code : \"+values.countryCode+\n                \" State Name : \"+values.stateName+\n                \" State Code : \"+values.zipcode+\n                \" Phone No. : \"+values.phoneNo\n            );\n            history.push(\"/sms\");\n        }\n    }\n    >\n\n        {formik => (\n            <form onSubmit={formik.handleSubmit} >\n            \n            <div className=\"input-container\">   \n            <Label labelFor=\"countryName\" title=\"Country *\" />\n            <Field name=\"countryName\" >\n                {\n                    (props) => {\n                        const {meta} = props;\n                        return(\n                            <div>\n                            <Select defaultValue=\"\" className={countryNameclass} >\n                                <MenuItem value=\"IN\" > <Flags.IN className=\"icon\" /> IN </MenuItem>\n                                <MenuItem value=\"US\" > <Flags.US className=\"icon\" /> US </MenuItem>\n                            </Select>\n                            {meta.touched && meta.error ? setCountNameClass(\"error-input\"): setCountCodeClass(\"correct-input\")}\n                            </div>\n                        )\n                    }\n                }\n            </Field>\n            <ErrorMessage name=\"countryName\" component=\"div\" className=\"error-msg\" />\n            </div>\n\n            <div className=\"input-container\">\n            <Label labelFor=\"firstAddress\" title=\"First line address *\" />\n            <Field className={firstAddclass} type=\"text\" placeholder=\"First Address Line\" name=\"firstAddress\" />\n            {formik.errors.firstAddress && formik.touched.firstAddress ? setfirstAddClass('error-input'): setfirstAddClass('correct-input')}\n            <ErrorMessage name=\"firstAddress\" component=\"div\" className=\"error-msg\" />\n            </div>\n\n            <div className=\"input-container\">\n            <Label labelFor=\"lastAddress\" title=\"Second line address *\" />\n            <Field className={secondAddclass} type=\"text\" name=\"lastAddress\" placeholder=\"Second Address Line\" />\n            {formik.errors.lastAddress && formik.touched.lastAddress ? setSecondAddClass('error-input'): setSecondAddClass('correct-input')}\n            <ErrorMessage name=\"lastAddress\" component=\"div\" className=\"error-msg\" />\n            </div>\n\n            <div className=\"input-wrapper\">\n                <div style={{maxWidth:267}} className=\"input-container\">\n                <Label labelFor=\"state\" title=\"State/Province *\" />\n                <Field style={{width:267}} className={stateNameclass} name=\"stateName\" placeholder=\"State Name\" type=\"text\" />\n                {formik.errors.stateName && formik.touched.stateName ? setStateNameClass('error-input'): setStateNameClass('correct-input')}\n                <ErrorMessage name=\"stateName\" className=\"error-msg\" component=\"div\" />\n                </div>\n\n                <div className=\"input-container\" style={{maxWidth:267}}>\n                <Label labelFor=\"cityName\" title=\"City/Town *\" />\n                <Field style={{width:267}} name=\"cityName\" className={cityNameclass} placeholder=\"City Name\" type=\"text\" />\n                {formik.errors.cityName && formik.touched.cityName ? setCityNameClass('error-input'): setCityNameClass('correct-input')}\n                <ErrorMessage name=\"cityName\" component=\"div\" className=\"error-msg\" />\n                </div>\n            </div>\n            \n            <div className=\"input-container\">\n            <Label labelFor=\"zipcode\" title=\"Zip code / Post code*\" />\n            <Field name=\"zipcode\" type=\"number\" className={zipcodeclass} placeholder=\"Zipcode\" />\n            {formik.errors.zipcode && formik.touched.zipcode ? setzipcodeClass('error-input'): setzipcodeClass('correct-input')}\n            <ErrorMessage name=\"zipcode\" component=\"div\" className=\"error-msg\" />\n            </div>\n            \n            <div className=\"input-wrapper\">\n                <div className=\"input-container\" style={{maxWidth:170}} >\n                <Label labelFor=\"countryCode\" title=\"Country code *\" />\n                <Field style={{width:170}} as=\"select\" className={countryCodeclass}  name=\"countryCode\" type=\"text\" >\n                    <option value={91} >IN</option>\n                    <option value={1}>US</option>\n                </Field>\n                {formik.errors.countryCode && formik.touched.countryCode ? setCountCodeClass('error-input'): setCountCodeClass('correct-input')}\n                <ErrorMessage name=\"countryCode\" component=\"div\" className=\"error-msg\" />\n                </div>\n                <div style={{maxWidth:364}} className=\"input-container\">\n                <Label labelFor=\"phoneNo\" title=\"Phone number *\" />\n                <Field style={{width:364}} type=\"tel\" className={phonoeclass} placeholder=\"Enter Phone number\" name=\"phoneNo\" />\n                {formik.errors.phoneNo && formik.touched.phoneNo ? setPhoneClass('error-input'): setPhoneClass('correct-input')}\n                <ErrorMessage name=\"phoneNo\" component=\"div\" className=\"error-msg\" />\n                </div>\n            </div>\n\n            <div className=\"button\">\n            <SubmitBtn typeFor=\"submit\" name=\"CONTINUE\" />\n            </div>\n        </form>\n        )}\n        </Formik>\n    );\n}\n\nexport default Form2;","import React from \"react\";\nimport \"./blueBtn.scss\"\n\nfunction  BlueBtn(props)\n{\n    return(\n        <button className=\"blue-btn\" type={props.type} style={{width:props.btnWidth}} >\n            {props.title}\n        </button>\n    );\n}\n\nexport default BlueBtn;","import React,{useState} from \"react\";\nimport Label from \"../components/Label\";\nimport BlueBtn from \"../components/BlueBtn\";\nimport { ErrorMessage, Field, Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nfunction UpdatePhone(props)\n{\n    const [countryCodeClass, setCountryCodeClass] = useState(\"correct-input\");\n    const [phoneClass, setPhoneClass] = useState(\"correct-input\");\n\n    return(\n        <>\n        <Formik\n                        initialValues = {{\n                            countryCode : '',\n                            phoneNum : ''\n                        }}\n                        validationSchema = {Yup.object({\n                            countryCode : Yup.number()\n                            .required(\"Select country code\"),\n                            phoneNum : Yup.number()\n                            .required(\"Required Field\")\n                            .max(9999999999, \"Invalid Number\")\n                            .min(1000000000, \"Invalid Number\")\n                        })}\n                        onSubmit = {(values) => {\n                            console.log(\"Country Code : \"+values.countryCode+\n                                        \" Phone : \"+values.phoneNum);\n                        }}\n                    >\n                    \n                    {formik => (\n                        <form onSubmit={formik.handleSubmit} >\n                        <div className=\"input-wrapper\">\n                            <div className=\"input-container\">\n                                <Label labelFor=\"countryCode\" title=\"Country code *\" />\n                                <Field style={{width:170}} name=\"countryCode\" className={countryCodeClass} type=\"number\" >\n                                    <option value={91}>IN</option>\n                                    <option value={1}>US</option>\n                                </Field>\n                                {formik.errors.countryCode && formik.touched.countryCode ? setCountryCodeClass(\"error-input\"):setCountryCodeClass(\"correct-input\")}\n                                <ErrorMessage name=\"countryCode\" className=\"error-msg\" component=\"div\" />\n                            </div>\n                            <div className=\"input-container\">\n                                <Label labelFor=\"phoneNum\" title=\"Phone number *\" />\n                                <Field name=\"phoneNum\" style={{width:199}} className={phoneClass} />\n                                {formik.errors.phoneNum && formik.touched.phoneNum ? setPhoneClass(\"error-input\") : setPhoneClass(\"correct-input\")}\n                                <ErrorMessage name=\"phoneNum\" className=\"error-msg\" component=\"div\" />\n                            </div>\n                            <div style={{marginLeft:19,marginTop:45}} onClick={() => props.function(false)} >\n                            <BlueBtn btnWidth={146} type=\"submit\" title=\"SEND CODE\" />\n                            </div>\n                        </div>\n                    </form>\n                    )}\n        </Formik>\n        </>\n    );\n}\n\nexport default UpdatePhone;","import React, { useState } from \"react\";\nimport Label from \"../components/Label\";\nimport SubmitBtn from \"../components/SubmitBtn\";\nimport \"../sass/forms.scss\";\nimport \"./form3.scss\";\nimport { ErrorMessage, Field, Formik } from \"formik\";\nimport UpdatePhone from \"./UpdatePhone\";\nimport * as Yup from \"yup\";\nimport { useHistory } from \"react-router\";\n\nfunction Form3()\n{\n\n    const [changeNumber, setChange] = useState(false);\n    const [smsClass, setsmsClass] = useState(\"correct-input\");\n    const history = useHistory();\n\n    return(\n        <>\n\n            {changeNumber ? \n                <UpdatePhone function={setChange} /> :\n                <div className=\"info-container\">\n                <div>\n                    Please enter seven digit code we just sent to your\n                    number\n                    <div style={{display:\"flex\"}}>\n                    <span>+202-502-5899</span> \n                    <div onClick={() => setChange(true)} className=\"links\"> Change </div>\n                    </div> \n                </div>\n            </div>\n            }\n            <Formik\n\n                initialValues = {{\n                    smsNumber : ''\n                }}\n                validationSchema = {Yup.object({\n                    smsNumber : Yup.number()\n                    .required(\"Required SMS Code\")\n                    .positive(\"Code Invalid\")\n                    .min(100000, \"Code must be of 6 digits\")\n                    .max(999999,\"Code must be of 6 digits\")\n                })}\n                onSubmit = {(values)=> {\n                    console.log(\"SMS CODE IS : \"+values.smsNumber);\n                    history.push(\"/verifyID\");\n                }}\n            >\n            \n            {formik => (\n                <form onSubmit={formik.handleSubmit}>\n\n                <div className=\"input-container\">\n                <Label labelFor=\"smsNumber\" title=\"SMS Code*\" />\n                <Field name=\"smsNumber\" plaholder=\"Enter SMS code\" type=\"number\" className={smsClass} />\n                {formik.errors.smsNumber && formik.touched.smsNumber ? setsmsClass(\"error-input\") : setsmsClass(\"correct-input\")}\n                <ErrorMessage name=\"smsNumber\" component=\"div\" className=\"error-msg\" />\n                </div>\n                {/* , textAlign:\"center\",width:553 */}\n                <div style={{marginTop:18}} className=\"conditional-box\">\n                    <p>You have 3 attempts left.Didn't receive the SMS.\n                         <a href=\"www.google.com\" className=\"links\"> Resend SMS Code </a>\n                    </p>\n                </div>\n                <div style={{marginTop:34}}>\n                <SubmitBtn typeFor=\"submit\" name=\"VERIFY PHONE NUMBER\" />\n                </div>  \n                </form>\n            )}\n            </Formik>\n        </>\n    );\n}\n\nexport default Form3;","export default __webpack_public_path__ + \"static/media/attention-icon.65235be9.svg\";","import React, { useState } from \"react\";\nimport Warning from \"../components/Warning\";\nimport Label from \"../components/Label\";\nimport SubmitBtn from \"../components/SubmitBtn\";\nimport AttentionIcon from \"../images/icons/attention-icon.svg\";\nimport \"../sass/forms.scss\";\nimport \"./form5.scss\";\nimport * as Yup from \"yup\";\nimport { ErrorMessage, Field, Formik } from \"formik\";\n\nfunction Form5()\n{   \n    const [dobClass, setDobClass] = useState(\"correct-input\");\n    const [methodClass, setmethodClass] = useState(\"correct-input\");\n    const [frontPhotoClass, setfrontClass] = useState(\"correct-input\");\n    const [backPhotoClass, setBackClass] = useState(\"correct-input\");\n    const [selfieClass, setselfieClass] = useState(\"correct-input\");\n    const [dlNumClass, setDLnumClass] = useState(\"correct-input\");\n    return(\n        <>\n            <Warning \n            height={116}\n            imgSrc={AttentionIcon} \n            content=\"Follow instructions to start buying cryptocurrencies via Xcoins:\n            1) Upload the front and back of your government issued ID\n            2) Please take a selfie holding your identity document and a note\n            with today’s date and «Xcoins» written on it\" \n            />\n\n            <Formik\n                initialValues= {{\n                    dob : '',\n                    method : '',\n                    frontPhoto : '',\n                    backPhoto : '',\n                    selfiePhoto : '',\n                    DLnumber : '',\n                    terms : false\n                }}\n\n                validationSchema = {Yup.object({\n                dob : Yup.date()\n                .required(\"Required DOB\")\n                .max(new Date(), \"DOB cannot be in future\")\n                .typeError(\"Birth Date has to be a valid date\"),\n                method : Yup.string()\n                .required(\"Method Required\"),\n                DLnumber : Yup.number()\n                .required(\"DL number is required\"),\n                terms : Yup.boolean()\n                .oneOf([true], \"Please accept the terms & conditions\"),\n                frontPhoto : Yup.string()\n                .required(\"File Required\"),\n                backPhoto : Yup.string()\n                .required(\"File Required\"),\n                selfiePhoto : Yup.string()\n                .required(\"File Required\")\n                })}\n\n                onSubmit = {(values) => {\n                    console.log(\"DOB :\"+values.dob+\n                                \" DLno. :\"+values.DLnumber);\n                }}\n            >\n\n            {formik => (\n                <form action=\"#\" onSubmit={formik.handleSubmit} >\n                \n                <div className=\"input-container\">\n                <Label labelFor=\"dob\" title=\"Date of birth *\" />\n                <Field name=\"dob\" type=\"date\" placeholder=\"Enter DOB\" className={dobClass} />\n                {formik.errors.dob && formik.touched.dob ? setDobClass(\"error-input\") : setDobClass(\"correct-input\")}\n                <ErrorMessage name=\"dob\" component=\"div\" className=\"error-msg\" />\n                </div>\n\n                <div className=\"input-container\">\n                <Label labelFor=\"method\" title=\"Choose method *\" />\n                <Field as=\"select\" name=\"method\" placeholder=\"Enter Method\" className={methodClass} type=\"text\" >\n                    <option value=\"DL\">Driving Licence</option>\n                    <option value=\"LL\">Learning Licence</option>\n                    <option value=\"Passport\">Passport</option>\n                    <option value=\"Aadhar\">Aadhar Card</option>\n                </Field>\n                {formik.errors.method && formik.touched.method ? setmethodClass(\"error-input\") : setmethodClass(\"correct-input\")}\n                <ErrorMessage name=\"method\" className=\"error-msg\" component=\"div\" />\n                </div>\n\n                <div className=\"input-container\">\n                <Label labelFor=\"frontPhoto\" title=\"Driving licence front photo *\" />\n                <Field name=\"forntPhoto\" type=\"file\" accept=\".jpg, .png, .pdf\" className={frontPhotoClass} />\n                {formik.errors.frontPhoto && formik.touched.frontPhoto ? setfrontClass(\"error-input\") : setfrontClass(\"correct-input\")}\n                <ErrorMessage name=\"frontPhoto\" component=\"div\" className=\"error-msg\" />\n                </div>\n\n                <div className=\"input-container\">\n                <Label labelFor=\"backPhoto\" title=\"Driving licence back photo *\" />\n                <Field name=\"backPhoto\" type=\"file\" accept=\".jpg, .png, .pdf\" className={backPhotoClass} />\n                {formik.errors.backPhoto && formik.touched.backPhoto ? setBackClass(\"error-input\") : setBackClass(\"correct-input\")}\n                <ErrorMessage name=\"backPhoto\" className=\"error-msg\" component=\"div\" />\n                </div>\n\n                <div className=\"input-container\">\n                <Label labelFor=\"selfiePhoto\" title=\"Selfie holding ID doc and note *\" />\n                <Field name=\"selfiePhoto\" type=\"file\" accept=\".jpg, .png, .pdf\" className={selfieClass} />\n                {formik.errors.selfiePhoto && formik.touched.selfiePhoto ? setselfieClass(\"error-input\"):setselfieClass(\"correct-input\")}\n                <ErrorMessage name=\"selfiePhoto\" component=\"div\" className=\"error-msg\" />\n                </div>\n\n                <div className=\"input-container\">\n                <Label labelFor=\"DLnumber\" title=\"Driving licence number *\" />\n                <Field name=\"DLnumber\" type=\"number\" placeholder=\"Enter DL Number\" className={dlNumClass} />\n                {formik.errors.DLnumber && formik.touched.DLnumber ? setDLnumClass(\"error-input\"):setDLnumClass(\"correct-input\")}\n                <ErrorMessage name=\"DLnumber\" className=\"error-msg\" component=\"div\" />\n                </div>\n\n                <div className=\"conditional-container\" style={{height: 70}}>\n                <div className=\"conditional-box\">\n                    <Field name=\"terms\" type=\"checkbox\"/>\n                    <p>\n                        Please accept<a href=\"www.google.com\"className=\"links\" > Terms of service </a>\n                        and<a href=\"www.google.com\" className=\"links\" > Privacy Policy </a>\n                    </p>\n                </div>\n                <ErrorMessage name=\"terms\" className=\"error-msg\" component=\"div\" />\n                </div>\n\n                <div style={{marginTop:29}}>\n                <SubmitBtn typeFor=\"submit\" name=\"UPLOAD FILES\" />\n                </div>\n            </form>\n            )}\n            </Formik>\n        </>\n    );\n}\n\nexport default Form5;","import React from \"react\";\nimport \"./formHead.scss\";\n\nfunction FromHeading(props)\n{\n    return(\n        <h1 className=\"form-head\" >\n            {props.title}\n        </h1>\n    );\n}\n\nexport default FromHeading;","import React from 'react';\nimport \"./navCircle.scss\";\nimport Label from \"./Label\";\n\nfunction NavCircle(props)\n{\n    return(\n\n        <div className=\"circle-wrapper\">\n            <div className=\"circle\">\n                {props.content}\n            </div>\n            <Label \n            labelFor={props.content} \n            title={props.labelHead}\n            style={{fontWeight:\"bold\"}} \n            />\n        </div>\n    )\n}\n\nexport default NavCircle;","import React from 'react';\nimport \"./sass/app.scss\";\nimport {HashRouter as Router, Switch , Route} from \"react-router-dom\";\nimport Form1 from \"./pages/Form-1\";\nimport Form1_UPD from \"./pages/Form-1-UPD\";\nimport Form2 from \"./pages/Form-2\";\nimport Form3 from \"./pages/Form-3\";\nimport Form5 from \"./pages/Form-5\";\nimport FromHeading from \"./components/FormHeading\";\nimport NavCircle from \"./components/NavCircle\"\n\nfunction App() {\n  return (\n    <div className=\"App\" >\n      <FromHeading title=\"Create account\" />\n        \n      <div className=\"circle-container\" >\n        <NavCircle content=\"1\" labelHead=\"Account setup\" />\n        <hr />\n        <NavCircle content=\"2\" labelHead=\"Personal details\" />\n        <hr />\n        <NavCircle content=\"3\" labelHead=\"Verify ID\" />\n      </div>\n      <Router basename={process.env.PUBLIC_URL} >\n        <Switch>\n          <Route exact path=\"/\" component={Form1} />\n          <Route exact path=\"/upd\" component={Form1_UPD} />\n          <Route exact path=\"/personalDetails\" component={Form2} />\n          <Route exact path=\"/sms\" component={Form3} />\n          <Route exact path=\"/verifyID\" component={Form5} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./sass/_partial.scss\";\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}