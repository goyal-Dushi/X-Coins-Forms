{"version":3,"sources":["components/Warning.jsx","images/icons/clock-icon.svg","components/Label.jsx","components/SubmitBtn.jsx","pages/Form-1.jsx","pages/Form-1-UPD.jsx","pages/Form-2.jsx","components/BlueBtn.jsx","pages/UpdatePhone.jsx","pages/Form-3.jsx","images/icons/attention-icon.svg","pages/Form-5.jsx","components/FormHeading.jsx","components/NavCircle.jsx","App.js","index.js"],"names":["Warning","props","style","height","className","src","imgSrc","alt","content","Label","htmlFor","labelFor","title","SubmitBtn","type","typeFor","name","Form1","history","useHistory","setter","useContext","circleContext","useState","firstNameClass","setfirstNameClass","lastNameClass","setlastNameClass","emailClass","setemailClass","passwordClass","setpasswordClass","useEffect","circle1","circle2","circle3","initialValues","firstName","lastName","email","password","terms","validationSchema","Yup","max","required","min","matches","oneOf","onSubmit","values","console","log","push","formik","Fragment","ClockIcon","altImg","handleSubmit","autoComplete","placeholder","touched","errors","display","component","href","sitekey","process","marginTop","validate","pincode1","pincode2","pincode3","pincode4","Form1_UPD","useFormik","ClockImg","action","id","pattern","onChange","handleChange","onBlur","handleBlur","value","Form2","countryNameclass","setCountNameClass","firstAddclass","setfirstAddClass","secondAddclass","setSecondAddClass","stateNameclass","setStateNameClass","cityNameclass","setCityNameClass","zipcodeclass","setzipcodeClass","countryCodeclass","setCountCodeClass","phonoeclass","setPhoneClass","countryName","firstAddress","lastAddress","stateName","cityName","zipcode","countryCode","phoneNo","positive","as","maxWidth","width","BlueBtn","btnWidth","UpdatePhone","countryCodeClass","setCountryCodeClass","phoneClass","phoneNum","marginLeft","onClick","function","Form3","changeNumber","setChange","smsClass","setsmsClass","smsNumber","plaholder","Form5","dobClass","setDobClass","methodClass","setmethodClass","frontPhotoClass","setfrontClass","backPhotoClass","setBackClass","selfieClass","setselfieClass","dlNumClass","setDLnumClass","AttentionIcon","dob","method","frontPhoto","backPhoto","selfiePhoto","DLnumber","Date","typeError","accept","FromHeading","NavCircle","status","labelHead","fontWeight","memo","createContext","App","active","setActive","basename","Provider","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7bdd62e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./warning.scss\";\n\nfunction Warning(props)\n{\n    return (\n        <div style={{height:props.height}} className=\"warning-rect\">\n            <img className=\"warning-icon\" src={props.imgSrc} alt={props.imgSrc} />\n            {props.content}\n        </div>\n    );\n}\n\nexport default Warning;","export default __webpack_public_path__ + \"static/media/clock-icon.e0d15e0f.svg\";","import React from 'react';\nimport \"./label.scss\";\n\nfunction Label(props)\n{\n    return(\n        <label htmlFor={props.labelFor}>{props.title}</label>\n    )\n}\n\nexport default Label;","import React from 'react';\nimport \"./submitBtn.scss\";\n\nfunction SubmitBtn(props)\n{\n    return(\n        <button className=\"green-btn\" type={props.typeFor}>\n            {props.name}\n        </button>\n    );\n}\n\nexport default SubmitBtn;","import { ErrorMessage, Field, Formik } from \"formik\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport Warning from \"../components/Warning\";\nimport ClockIcon from \"../images/icons/clock-icon.svg\";\nimport Label from \"../components/Label\";\nimport SubmitButton from \"../components/SubmitBtn\";\nimport \"../sass/forms.scss\";\nimport ReCaptchaV2 from \"react-google-recaptcha\";\nimport { useHistory } from \"react-router\";\nimport * as Yup from \"yup\";\nimport { circleContext } from \"../App\";\n\nfunction Form1() {\n  const history = useHistory();\n  const { setter } = useContext(circleContext);\n  const [firstNameClass, setfirstNameClass] = useState(\"correct-input\");\n  const [lastNameClass, setlastNameClass] = useState(\"correct-input\");\n  const [emailClass, setemailClass] = useState(\"correct-input\");\n  const [passwordClass, setpasswordClass] = useState(\"correct-input\");\n\n  useEffect(() => {\n    setter({ circle1: true, circle2: false, circle3: false });\n  }, []);\n\n  return (\n    <Formik\n      initialValues={{\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        terms: false,\n      }}\n      validationSchema={Yup.object({\n        firstName: Yup.string()\n          .max(12, \"Must be 12 characters or less\")\n          .required(\"Required Field\"),\n        lastName: Yup.string()\n          .max(12, \"Must be 12 characters or less\")\n          .required(\"Required Field\"),\n        email: Yup.string()\n          .email(\"Invalid email ID provided\")\n          .required(\"Required Field\"),\n        password: Yup.string()\n          .max(15, \"Must be of max 15 characters\")\n          .min(4, \"Cannot be less than 4 characters\")\n          .required(\"Required Field\")\n          .matches(\"(?=.*[A-Z])\", \"Must contain atlease one UPPERCASE char\")\n          .matches(\"(?=.*[a-z])\", \"Must contain atleast one lowercase char\")\n          .matches(\n            \"(?=.*[-+_!@#$%^&*., ?])\",\n            \"Must contain atleast one special character\"\n          ),\n        terms: Yup.boolean().oneOf(\n          [true],\n          \"Must accept the terms and conditions first\"\n        ),\n      })}\n      onSubmit={(values) => {\n        console.log(\n          \"Form is successfully submitted :\" +\n            values.firstName +\n            \" \" +\n            values.lastName\n        );\n        history.push(\"/upd\");\n      }}>\n      {(formik) => (\n        <React.Fragment>\n          <Warning\n            imgSrc={ClockIcon}\n            altImg='Clock-Icon'\n            height={72}\n            content='Once submitted,your profile cannot be changed. \n                    Please ensure that your information is correct.'\n          />\n\n          <form onSubmit={formik.handleSubmit}>\n            <div className='input-container'>\n              <Label title='First name*' labelFor='firstName' />\n              <Field\n                autoComplete='off'\n                name='firstName'\n                type='text'\n                placeholder='Enter First Name'\n                className={firstNameClass}\n              />\n              {formik.touched.firstName && formik.errors.firstName\n                ? setfirstNameClass(\"error-input\")\n                : setfirstNameClass(\"correct-input\")}\n              <ErrorMessage\n                style={{ display: \"block\" }}\n                name='firstName'\n                className='error-msg'\n                component='div'\n              />\n            </div>\n\n            <div className='input-container'>\n              <Label labelFor='#lastName' title='Last name*' />\n              <Field\n                autoComplete='off'\n                name='lastName'\n                type='text'\n                placeholder='Enter Last Name'\n                className={lastNameClass}\n              />\n              {formik.touched.lastName && formik.errors.lastName\n                ? setlastNameClass(\"error-input\")\n                : setlastNameClass(\"correct-input\")}\n              <ErrorMessage\n                name='lastName'\n                className='error-msg'\n                component='div'\n              />\n            </div>\n\n            <div className='input-container'>\n              <Label title='Email address*' labelFor='#email' />\n              <Field\n                autoComplete='off'\n                type='text'\n                name='email'\n                placeholder='Enter Email ID'\n                className={emailClass}\n              />\n              {formik.touched.email && formik.errors.email\n                ? setemailClass(\"error-input\")\n                : setemailClass(\"correct-input\")}\n              <ErrorMessage\n                name='email'\n                component='div'\n                className='error-msg'\n              />\n            </div>\n\n            <div className='input-container'>\n              <Label labelFor='password' title='Create Password' />\n              <Field\n                name='password'\n                placeholder='Enter Password'\n                type='password'\n                className={passwordClass}\n              />\n              {formik.touched.password && formik.errors.password\n                ? setpasswordClass(\"error-input\")\n                : setpasswordClass(\"correct-input\")}\n              <ErrorMessage\n                name='password'\n                component='div'\n                className='error-msg'\n              />\n            </div>\n\n            <div className='conditional-container' style={{ height: 130 }}>\n              <div className='conditional-box'>\n                <Field type='checkbox' name='terms' />\n                <p>\n                  By clicking «Continue» you agree to our\n                  <a href='www.google.com' className='links'>\n                    Terms\n                  </a>\n                  ,\n                  <a href='www.google.com' className='links'>\n                    Cookies Policy\n                  </a>\n                  and\n                  <a href='www.google.com' className='links'>\n                    Privacy Policy\n                  </a>\n                  . You may receive email and SMS notifications from us and can\n                  opt out at any time.\n                </p>\n              </div>\n              <ErrorMessage\n                name='terms'\n                component='div'\n                className='error-msg'\n              />\n            </div>\n\n            <ReCaptchaV2 sitekey={process.env.REACT_APP_SITE_KEY} />\n            <div style={{ marginTop: 40 }}>\n              <SubmitButton name='CONTINUE' typeFor='submit' />\n            </div>\n          </form>\n        </React.Fragment>\n      )}\n    </Formik>\n  );\n}\n\nexport default Form1;\n","import React from \"react\";\nimport Warning from \"../components/Warning\";\nimport ClockImg from \"../images/icons/clock-icon.svg\";\nimport Label from \"../components/Label\";\nimport \"./formUPD.scss\";\nimport SubmitBtn from \"../components/SubmitBtn\";\nimport { useFormik } from \"formik\";\nimport { useHistory } from \"react-router\";\n\nconst validate = (values) => {\n  const errors = {};\n\n  if (!values.pincode1) {\n    errors.pincode1 = \"Required field 1\";\n  } else if (values.pincode1 > 9 || values.pincode1 < 0) {\n    errors.pincode1 = \"Field 1: only single digit poitive value accepted\";\n  }\n  if (!values.pincode2) {\n    errors.pincode2 = \"Required field 2\";\n  } else if (values.pincode2 > 9 || values.pincode2 < 0) {\n    errors.pincode2 = \"Field 2: only single digit positive value accepted\";\n  }\n  if (!values.pincode3) {\n    errors.pincode3 = \"Required field 3\";\n  } else if (values.pincode3 > 9 || values.pincode3 < 0) {\n    errors.pincode3 = \"Field 3: only single digit positive value accepted\";\n  }\n  if (!values.pincode4) {\n    errors.pincode4 = \"Required field 4\";\n  } else if (values.pincode4 > 9 || values.pincode4 < 0) {\n    errors.pincode4 = \"Field 4: only single digit positive value accepted\";\n  }\n\n  return errors;\n};\n\nfunction Form1_UPD() {\n  const history = useHistory();\n\n  const formik = useFormik({\n    initialValues: {\n      pincode1: \"\",\n      pincode2: \"\",\n      pincode3: \"\",\n      pincode4: \"\",\n    },\n    validate,\n    onSubmit: (values) => {\n      console.log(\n        \"Pincode : \" +\n          values.pincode1 +\n          values.pincode2 +\n          values.pincode3 +\n          values.pincode4\n      );\n      history.push(\"/personalDetails\");\n    },\n  });\n\n  return (\n    <React.Fragment>\n      <Warning\n        height={72}\n        imgSrc={ClockImg}\n        content=\"We've sent your email address a code. Please\n                    input the 4 digit code here to verify your email\n                    address\"\n      />\n\n      <form className='form-UPD' action='#' onSubmit={formik.handleSubmit}>\n        <div className='label-container'>\n          <Label labelFor='pin-container' title='4 digit code' />\n        </div>\n\n        <div className='pin-container'>\n          <input\n            type='number'\n            name='pincode1'\n            id='pincode1'\n            min={0}\n            pattern='/[^0-9]|^0+(?!$)/g'\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.pincode1}\n          />\n\n          <input\n            type='number'\n            name='pincode2'\n            id='pincode2'\n            min={0}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.pincode2}\n          />\n\n          <input\n            type='number'\n            name='pincode3'\n            id='pincode3'\n            min={0}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.pincode3}\n          />\n\n          <input\n            type='number'\n            name='pincode4'\n            id='pincode4'\n            min={0}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.pincode4}\n          />\n        </div>\n        {formik.touched.pincode1 && formik.errors.pincode1 ? (\n          <div className='error-msg'> {formik.errors.pincode1} </div>\n        ) : null}\n        {formik.touched.pincode2 && formik.errors.pincode2 ? (\n          <div className='error-msg'> {formik.errors.pincode2} </div>\n        ) : null}\n        {formik.touched.pincode3 && formik.errors.pincode3 ? (\n          <div className='error-msg'> {formik.errors.pincode3} </div>\n        ) : null}\n        {formik.touched.pincode4 && formik.errors.pincode4 ? (\n          <div className='error-msg'> {formik.errors.pincode4} </div>\n        ) : null}\n\n        <div className='form1UPD-submit-btn'>\n          <SubmitBtn typeFor='submit' name='RESEND CODE' />\n        </div>\n      </form>\n    </React.Fragment>\n  );\n}\n\nexport default Form1_UPD;\n","import React, { useContext, useState } from \"react\";\nimport \"../sass/forms.scss\";\nimport \"./form2.scss\";\nimport Label from \"../components/Label\";\nimport SubmitBtn from \"../components/SubmitBtn\";\nimport { useHistory } from \"react-router\";\nimport { ErrorMessage, Field, Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { circleContext } from \"../App\";\nimport { useEffect } from \"react\";\n// import Flags from \"country-flag-icons/react/3x2\";\n// import MenuItem from \"@material-ui/core/MenuItem\";\n// import Select from \"@material-ui/core/Select\";\n\nfunction Form2() {\n  const history = useHistory();\n  const { setter } = useContext(circleContext);\n  const [countryNameclass, setCountNameClass] = useState(\"correct-input\");\n  const [firstAddclass, setfirstAddClass] = useState(\"correct-input\");\n  const [secondAddclass, setSecondAddClass] = useState(\"correct-input\");\n  const [stateNameclass, setStateNameClass] = useState(\"correct-input\");\n  const [cityNameclass, setCityNameClass] = useState(\"correct-input\");\n  const [zipcodeclass, setzipcodeClass] = useState(\"correct-input\");\n  const [countryCodeclass, setCountCodeClass] = useState(\"correct-input\");\n  const [phonoeclass, setPhoneClass] = useState(\"correct-input\");\n\n  useEffect(() => {\n    setter({ circle3: false, circle2: true, circle1: false });\n  }, []);\n\n  return (\n    <Formik\n      initialValues={{\n        countryName: \"\",\n        firstAddress: \"\",\n        lastAddress: \"\",\n        stateName: \"\",\n        cityName: \"\",\n        zipcode: \"\",\n        countryCode: \"\",\n        phoneNo: \"\",\n      }}\n      validationSchema={Yup.object({\n        countryName: Yup.string().required(\"Required Country Name\"),\n        firstAddress: Yup.string().required(\"Required First Address Field\"),\n        lastAddress: Yup.string().required(\"Required Second Address Field\"),\n        stateName: Yup.string().required(\"Required State Name\"),\n        cityName: Yup.string().required(\"Required City name\"),\n        zipcode: Yup.number()\n          .max(999999, \"Max lenght cannot exceed 6 digits\")\n          .required(\"Required zipcode\"),\n        countryCode: Yup.string().required(\"Required Country code\"),\n        phoneNo: Yup.number()\n          .required(\"Required Phone number\")\n          .positive(\"Negative Number\")\n          .max(9999999999, \"Invalid Number\")\n          .min(1000000000, \"Invalid Number\"),\n      })}\n      onSubmit={(values) => {\n        console.log(\n          \"Country Name : \" +\n            values.countryName +\n            \" Country Code : \" +\n            values.countryCode +\n            \" State Name : \" +\n            values.stateName +\n            \" State Code : \" +\n            values.zipcode +\n            \" Phone No. : \" +\n            values.phoneNo\n        );\n        history.push(\"/sms\");\n      }}>\n      {(formik) => (\n        <form onSubmit={formik.handleSubmit}>\n          <div className='input-container'>\n            <Label labelFor='countryName' title='Country *' />\n            <Field\n              className={countryNameclass}\n              placeholder={\"Country Name*\"}\n              name='countryName'\n              as={\"select\"}>\n              {/* {(props) => {\n                const { meta } = props;\n                return (\n                  <div>\n                    <Select defaultValue='' className={countryNameclass}>\n                      <MenuItem value='IN'>\n                        <Flags.IN className='icon' /> IN\n                      </MenuItem>\n                      <MenuItem value='US'>\n                        <Flags.US className='icon' /> US\n                      </MenuItem>\n                    </Select>\n                    {formik.touched.countryName && formik.errors.countryName\n                      ? setCountNameClass(\"error-input\")\n                      : setCountCodeClass(\"correct-input\")}\n                  </div>\n                );\n              }} */}\n              <option value={\"India\"}> {\"IN\"} </option>\n              <option value={\"Usa\"}> {\"USA\"} </option>\n            </Field>\n            {formik.errors.countryName && formik.touched.countryName\n              ? setCountNameClass(\"error-input\")\n              : setCountNameClass(\"correct-input\")}\n            <ErrorMessage\n              name='countryName'\n              component='div'\n              className='error-msg'\n            />\n          </div>\n\n          <div className='input-container'>\n            <Label labelFor='firstAddress' title='First line address *' />\n            <Field\n              className={firstAddclass}\n              type='text'\n              placeholder='First Address Line'\n              name='firstAddress'\n            />\n            {formik.errors.firstAddress && formik.touched.firstAddress\n              ? setfirstAddClass(\"error-input\")\n              : setfirstAddClass(\"correct-input\")}\n            <ErrorMessage\n              name='firstAddress'\n              component='div'\n              className='error-msg'\n            />\n          </div>\n\n          <div className='input-container'>\n            <Label labelFor='lastAddress' title='Second line address *' />\n            <Field\n              className={secondAddclass}\n              type='text'\n              name='lastAddress'\n              placeholder='Second Address Line'\n            />\n            {formik.errors.lastAddress && formik.touched.lastAddress\n              ? setSecondAddClass(\"error-input\")\n              : setSecondAddClass(\"correct-input\")}\n            <ErrorMessage\n              name='lastAddress'\n              component='div'\n              className='error-msg'\n            />\n          </div>\n\n          <div className='input-wrapper'>\n            <div style={{ maxWidth: 267 }} className='input-container'>\n              <Label labelFor='state' title='State/Province *' />\n              <Field\n                style={{ width: 267 }}\n                className={stateNameclass}\n                name='stateName'\n                placeholder='State Name'\n                type='text'\n              />\n              {formik.errors.stateName && formik.touched.stateName\n                ? setStateNameClass(\"error-input\")\n                : setStateNameClass(\"correct-input\")}\n              <ErrorMessage\n                name='stateName'\n                className='error-msg'\n                component='div'\n              />\n            </div>\n\n            <div className='input-container' style={{ maxWidth: 267 }}>\n              <Label labelFor='cityName' title='City/Town *' />\n              <Field\n                style={{ width: 267 }}\n                name='cityName'\n                className={cityNameclass}\n                placeholder='City Name'\n                type='text'\n              />\n              {formik.errors.cityName && formik.touched.cityName\n                ? setCityNameClass(\"error-input\")\n                : setCityNameClass(\"correct-input\")}\n              <ErrorMessage\n                name='cityName'\n                component='div'\n                className='error-msg'\n              />\n            </div>\n          </div>\n\n          <div className='input-container'>\n            <Label labelFor='zipcode' title='Zip code / Post code*' />\n            <Field\n              name='zipcode'\n              type='number'\n              className={zipcodeclass}\n              placeholder='Zipcode'\n            />\n            {formik.errors.zipcode && formik.touched.zipcode\n              ? setzipcodeClass(\"error-input\")\n              : setzipcodeClass(\"correct-input\")}\n            <ErrorMessage\n              name='zipcode'\n              component='div'\n              className='error-msg'\n            />\n          </div>\n\n          <div className='input-wrapper'>\n            <div className='input-container' style={{ maxWidth: 170 }}>\n              <Label labelFor='countryCode' title='Country code *' />\n              <Field\n                style={{ width: 170 }}\n                as='select'\n                className={countryCodeclass}\n                name='countryCode'\n                type='text'>\n                <option value={91}>IN</option>\n                <option value={1}>US</option>\n              </Field>\n              {formik.errors.countryCode && formik.touched.countryCode\n                ? setCountCodeClass(\"error-input\")\n                : setCountCodeClass(\"correct-input\")}\n              <ErrorMessage\n                name='countryCode'\n                component='div'\n                className='error-msg'\n              />\n            </div>\n            <div style={{ maxWidth: 364 }} className='input-container'>\n              <Label labelFor='phoneNo' title='Phone number *' />\n              <Field\n                style={{ width: 364 }}\n                type='tel'\n                className={phonoeclass}\n                placeholder='Enter Phone number'\n                name='phoneNo'\n              />\n              {formik.errors.phoneNo && formik.touched.phoneNo\n                ? setPhoneClass(\"error-input\")\n                : setPhoneClass(\"correct-input\")}\n              <ErrorMessage\n                name='phoneNo'\n                component='div'\n                className='error-msg'\n              />\n            </div>\n          </div>\n\n          <div className='button'>\n            <SubmitBtn typeFor='submit' name='CONTINUE' />\n          </div>\n        </form>\n      )}\n    </Formik>\n  );\n}\n\nexport default Form2;\n","import React from \"react\";\nimport \"./blueBtn.scss\"\n\nfunction  BlueBtn(props)\n{\n    return(\n        <button className=\"blue-btn\" type={props.type} style={{width:props.btnWidth}} >\n            {props.title}\n        </button>\n    );\n}\n\nexport default BlueBtn;","import React, { useState } from \"react\";\nimport Label from \"../components/Label\";\nimport BlueBtn from \"../components/BlueBtn\";\nimport { ErrorMessage, Field, Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nfunction UpdatePhone(props) {\n  const [countryCodeClass, setCountryCodeClass] = useState(\"correct-input\");\n  const [phoneClass, setPhoneClass] = useState(\"correct-input\");\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          countryCode: \"\",\n          phoneNum: \"\",\n        }}\n        validationSchema={Yup.object({\n          countryCode: Yup.number().required(\"Select country code\"),\n          phoneNum: Yup.number()\n            .required(\"Required Field\")\n            .max(9999999999, \"Invalid Number\")\n            .min(1000000000, \"Invalid Number\"),\n        })}\n        onSubmit={(values) => {\n          console.log(\n            \"Country Code : \" +\n              values.countryCode +\n              \" Phone : \" +\n              values.phoneNum\n          );\n        }}>\n        {(formik) => (\n          <form onSubmit={formik.handleSubmit}>\n            <div className='input-wrapper'>\n              <div className='input-container'>\n                <Label labelFor='countryCode' title='Country code *' />\n                <Field\n                  style={{ width: 170 }}\n                  name='countryCode'\n                  className={countryCodeClass}\n                  as={\"select\"}\n                  type='number'>\n                  <option value={91}>IN</option>\n                  <option value={1}>US</option>\n                </Field>\n                {formik.errors.countryCode && formik.touched.countryCode\n                  ? setCountryCodeClass(\"error-input\")\n                  : setCountryCodeClass(\"correct-input\")}\n                <ErrorMessage\n                  name='countryCode'\n                  className='error-msg'\n                  component='div'\n                />\n              </div>\n              <div className='input-container'>\n                <Label labelFor='phoneNum' title='Phone number *' />\n                <Field\n                  name='phoneNum'\n                  type={\"number\"}\n                  style={{ width: 199 }}\n                  className={phoneClass}\n                />\n                {formik.errors.phoneNum && formik.touched.phoneNum\n                  ? setPhoneClass(\"error-input\")\n                  : setPhoneClass(\"correct-input\")}\n                <ErrorMessage\n                  name='phoneNum'\n                  className='error-msg'\n                  component='div'\n                />\n              </div>\n              <div\n                style={{ marginLeft: 19, marginTop: 45 }}\n                onClick={() => props.function(false)}>\n                <BlueBtn btnWidth={146} type='submit' title='SEND CODE' />\n              </div>\n            </div>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n}\n\nexport default UpdatePhone;\n","import React, { useState } from \"react\";\nimport Label from \"../components/Label\";\nimport SubmitBtn from \"../components/SubmitBtn\";\nimport \"../sass/forms.scss\";\nimport \"./form3.scss\";\nimport { ErrorMessage, Field, Formik } from \"formik\";\nimport UpdatePhone from \"./UpdatePhone\";\nimport * as Yup from \"yup\";\nimport { useHistory } from \"react-router\";\n\nfunction Form3() {\n  const [changeNumber, setChange] = useState(false);\n  const [smsClass, setsmsClass] = useState(\"correct-input\");\n  const history = useHistory();\n\n  return (\n    <>\n      {changeNumber ? (\n        <UpdatePhone function={setChange} />\n      ) : (\n        <div className='info-container'>\n          <div>\n            Please enter seven digit code we just sent to your number\n            <div style={{ display: \"flex\" }}>\n              <span>+202-502-5899</span>\n              <div onClick={() => setChange(true)} className='links'>\n                Change\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      <Formik\n        initialValues={{\n          smsNumber: \"\",\n        }}\n        validationSchema={Yup.object({\n          smsNumber: Yup.number()\n            .required(\"Required SMS Code\")\n            .positive(\"Code Invalid\")\n            .min(100000, \"Code must be of 6 digits\")\n            .max(999999, \"Code must be of 6 digits\"),\n        })}\n        onSubmit={(values) => {\n          console.log(\"SMS CODE IS : \" + values.smsNumber);\n          history.push(\"/verifyID\");\n        }}>\n        {(formik) => (\n          <form onSubmit={formik.handleSubmit}>\n            <div className='input-container'>\n              <Label labelFor='smsNumber' title='SMS Code*' />\n              <Field\n                name='smsNumber'\n                plaholder='Enter SMS code'\n                type='number'\n                className={smsClass}\n              />\n              {formik.errors.smsNumber && formik.touched.smsNumber\n                ? setsmsClass(\"error-input\")\n                : setsmsClass(\"correct-input\")}\n              <ErrorMessage\n                name='smsNumber'\n                component='div'\n                className='error-msg'\n              />\n            </div>\n            <div style={{ marginTop: 18 }} className='conditional-box'>\n              <p>\n                You have 3 attempts left.Didn't receive the SMS.\n                <a href='www.google.com' className='links'>\n                  {\" \"}\n                  Resend SMS Code{\" \"}\n                </a>\n              </p>\n            </div>\n            <div style={{ marginTop: 34 }}>\n              <SubmitBtn typeFor='submit' name='VERIFY PHONE NUMBER' />\n            </div>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n}\n\nexport default Form3;\n","export default __webpack_public_path__ + \"static/media/attention-icon.65235be9.svg\";","import React, { useState, useContext, useEffect } from \"react\";\nimport Warning from \"../components/Warning\";\nimport Label from \"../components/Label\";\nimport SubmitBtn from \"../components/SubmitBtn\";\nimport AttentionIcon from \"../images/icons/attention-icon.svg\";\nimport \"../sass/forms.scss\";\nimport \"./form5.scss\";\nimport * as Yup from \"yup\";\nimport { ErrorMessage, Field, Formik } from \"formik\";\nimport { circleContext } from \"../App\";\n\nfunction Form5() {\n  const { setter } = useContext(circleContext);\n  const [dobClass, setDobClass] = useState(\"correct-input\");\n  const [methodClass, setmethodClass] = useState(\"correct-input\");\n  const [frontPhotoClass, setfrontClass] = useState(\"correct-input\");\n  const [backPhotoClass, setBackClass] = useState(\"correct-input\");\n  const [selfieClass, setselfieClass] = useState(\"correct-input\");\n  const [dlNumClass, setDLnumClass] = useState(\"correct-input\");\n\n  useEffect(() => {\n    setter({ circle3: true, circle2: false, circle1: false });\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Warning\n        height={116}\n        imgSrc={AttentionIcon}\n        content='Follow instructions to start buying cryptocurrencies via Xcoins:\n            1) Upload the front and back of your government issued ID\n            2) Please take a selfie holding your identity document and a note\n            with today’s date and «Xcoins» written on it'\n      />\n\n      <Formik\n        initialValues={{\n          dob: \"\",\n          method: \"\",\n          frontPhoto: \"\",\n          backPhoto: \"\",\n          selfiePhoto: \"\",\n          DLnumber: \"\",\n          terms: false,\n        }}\n        validationSchema={Yup.object({\n          dob: Yup.date()\n            .required(\"Required DOB\")\n            .max(new Date(), \"DOB cannot be in future\")\n            .typeError(\"Birth Date has to be a valid date\"),\n          method: Yup.string().required(\"Method Required\"),\n          DLnumber: Yup.number().required(\"DL number is required\"),\n          terms: Yup.boolean().oneOf(\n            [true],\n            \"Please accept the terms & conditions\"\n          ),\n          frontPhoto: Yup.string().required(\"File Required\"),\n          backPhoto: Yup.string().required(\"File Required\"),\n          selfiePhoto: Yup.string().required(\"File Required\"),\n        })}\n        onSubmit={(values) => {\n          console.log(\"DOB :\" + values.dob + \" DLno. :\" + values.DLnumber);\n        }}>\n        {(formik) => (\n          <form action='#' onSubmit={formik.handleSubmit}>\n            <div className='input-container'>\n              <Label labelFor='dob' title='Date of birth *' />\n              <Field\n                name='dob'\n                type='date'\n                placeholder='Enter DOB'\n                className={dobClass}\n              />\n              {formik.errors.dob && formik.touched.dob\n                ? setDobClass(\"error-input\")\n                : setDobClass(\"correct-input\")}\n              <ErrorMessage name='dob' component='div' className='error-msg' />\n            </div>\n\n            <div className='input-container'>\n              <Label labelFor='method' title='Choose method *' />\n              <Field\n                as='select'\n                name='method'\n                placeholder='Enter Method'\n                className={methodClass}\n                type='text'>\n                <option value='DL'>Driving Licence</option>\n                <option value='LL'>Learning Licence</option>\n                <option value='Passport'>Passport</option>\n                <option value='Aadhar'>Aadhar Card</option>\n              </Field>\n              {formik.errors.method && formik.touched.method\n                ? setmethodClass(\"error-input\")\n                : setmethodClass(\"correct-input\")}\n              <ErrorMessage\n                name='method'\n                className='error-msg'\n                component='div'\n              />\n            </div>\n\n            <div className='input-container'>\n              <Label\n                labelFor='frontPhoto'\n                title='Driving licence front photo *'\n              />\n              <Field\n                name='frontPhoto'\n                type='file'\n                accept='.jpg, .png, .pdf'\n                className={frontPhotoClass}\n              />\n              {formik.errors.frontPhoto && formik.touched.frontPhoto\n                ? setfrontClass(\"error-input\")\n                : setfrontClass(\"correct-input\")}\n              <ErrorMessage\n                name='frontPhoto'\n                component='div'\n                className='error-msg'\n              />\n            </div>\n\n            <div className='input-container'>\n              <Label\n                labelFor='backPhoto'\n                title='Driving licence back photo *'\n              />\n              <Field\n                name='backPhoto'\n                type='file'\n                accept='.jpg, .png, .pdf'\n                className={backPhotoClass}\n              />\n              {formik.errors.backPhoto && formik.touched.backPhoto\n                ? setBackClass(\"error-input\")\n                : setBackClass(\"correct-input\")}\n              <ErrorMessage\n                name='backPhoto'\n                className='error-msg'\n                component='div'\n              />\n            </div>\n\n            <div className='input-container'>\n              <Label\n                labelFor='selfiePhoto'\n                title='Selfie holding ID doc and note *'\n              />\n              <Field\n                name='selfiePhoto'\n                type='file'\n                accept='.jpg, .png, .pdf'\n                className={selfieClass}\n              />\n              {formik.errors.selfiePhoto && formik.touched.selfiePhoto\n                ? setselfieClass(\"error-input\")\n                : setselfieClass(\"correct-input\")}\n              <ErrorMessage\n                name='selfiePhoto'\n                component='div'\n                className='error-msg'\n              />\n            </div>\n\n            <div className='input-container'>\n              <Label labelFor='DLnumber' title='Driving licence number *' />\n              <Field\n                name='DLnumber'\n                type='number'\n                placeholder='Enter DL Number'\n                className={dlNumClass}\n              />\n              {formik.errors.DLnumber && formik.touched.DLnumber\n                ? setDLnumClass(\"error-input\")\n                : setDLnumClass(\"correct-input\")}\n              <ErrorMessage\n                name='DLnumber'\n                className='error-msg'\n                component='div'\n              />\n            </div>\n\n            <div className='conditional-container' style={{ height: 70 }}>\n              <div className='conditional-box'>\n                <Field name='terms' type='checkbox' />\n                <p>\n                  Please accept\n                  <a href='www.google.com' className='links'>\n                    Terms of service\n                  </a>\n                  and\n                  <a href='www.google.com' className='links'>\n                    Privacy Policy\n                  </a>\n                </p>\n              </div>\n              <ErrorMessage\n                name='terms'\n                className='error-msg'\n                component='div'\n              />\n            </div>\n\n            <div style={{ marginTop: 29 }}>\n              <SubmitBtn typeFor='submit' name='UPLOAD FILES' />\n            </div>\n          </form>\n        )}\n      </Formik>\n    </React.Fragment>\n  );\n}\n\nexport default Form5;\n","import React from \"react\";\nimport \"./formHead.scss\";\n\nfunction FromHeading(props)\n{\n    return(\n        <h1 className=\"form-head\" >\n            {props.title}\n        </h1>\n    );\n}\n\nexport default FromHeading;","import React, { memo } from \"react\";\nimport \"./navCircle.scss\";\nimport Label from \"./Label\";\n\nfunction NavCircle(props) {\n  return (\n    <div className='circle-wrapper'>\n      <div className={props.status ? \"circle activeCircle\" : \"circle\"}>\n        {props.content}\n      </div>\n      <Label\n        labelFor={props.content}\n        title={props.labelHead}\n        style={{ fontWeight: \"bold\" }}\n      />\n    </div>\n  );\n}\n\nexport default memo(NavCircle);\n","import React, { createContext, useState } from \"react\";\nimport \"./sass/app.scss\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Form1 from \"./pages/Form-1\";\nimport Form1_UPD from \"./pages/Form-1-UPD\";\nimport Form2 from \"./pages/Form-2\";\nimport Form3 from \"./pages/Form-3\";\nimport Form5 from \"./pages/Form-5\";\nimport FromHeading from \"./components/FormHeading\";\nimport NavCircle from \"./components/NavCircle\";\n\nexport const circleContext = createContext();\n\nfunction App() {\n  const [active, setActive] = useState({\n    circle1: true,\n    circle2: false,\n    circle3: false,\n  });\n\n  return (\n    <div className='App'>\n      <FromHeading title='Create account' />\n\n      <div className='circle-container'>\n        <NavCircle\n          status={active.circle1}\n          content='1'\n          labelHead='Account setup'\n        />\n        <hr />\n        <NavCircle\n          status={active.circle2}\n          content='2'\n          labelHead='Personal details'\n        />\n        <hr />\n        <NavCircle status={active.circle3} content='3' labelHead='Verify ID' />\n      </div>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <circleContext.Provider value={{ setter: setActive }}>\n            <Route exact path='/' component={Form1} />\n            <Route exact path='/upd' component={Form1_UPD} />\n            <Route exact path='/personalDetails' component={Form2} />\n            <Route exact path='/sms' component={Form3} />\n            <Route exact path='/verifyID' component={Form5} />\n          </circleContext.Provider>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./sass/_partial.scss\";\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}